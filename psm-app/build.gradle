
buildscript {
    repositories {
        mavenCentral()
        maven {
            url  'http://dl.bintray.com/djmijares/gradle-plugins'
        }
    }
    dependencies {
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
    }
}


// These libraries are known to be used, since they are required during compile
// or on immediate deployment
ext.libs = [
    commons_codec: 'commons-codec:commons-codec:1.6',
    commons_fileupload: 'commons-fileupload:commons-fileupload:1.2.2',
    commons_io: 'commons-io:commons-io:2.0.1',
    commons_lang: 'commons-lang:commons-lang:2.4',
    drools_core: 'org.drools:drools-core:5.4.0.Final',
    itext: 'com.lowagie:itext:2.1.7',
    jasypt: 'org.jasypt:jasypt:1.9.0',
    jbpm_flow: 'org.jbpm:jbpm-flow:5.3.0.Final',
    jbpm_human_task_core: 'org.jbpm:jbpm-human-task-core:5.3.0.Final',
    jbpm_persistence_jpa: 'org.jbpm:jbpm-persistence-jpa:5.3.0.Final',
    log4j: 'log4j:log4j:1.2.16',
    spring_beans: 'org.springframework:spring-beans:3.0.5.RELEASE',
    spring_context: 'org.springframework:spring-context:3.0.5.RELEASE',
    spring_jdbc: 'org.springframework:spring-jdbc:3.0.5.RELEASE',
    spring_ldap: 'org.springframework.ldap:spring-ldap-core:1.3.1.RELEASE',
    spring_security_config: 'org.springframework.security:spring-security-config:3.0.5.RELEASE',
    spring_security_core: 'org.springframework.security:spring-security-core:3.0.5.RELEASE',
    spring_security_ldap: 'org.springframework.security:spring-security-ldap:3.0.5.RELEASE',
    spring_security_web: 'org.springframework.security:spring-security-web:3.0.5.RELEASE',
    spring_tx: 'org.springframework:spring-tx:3.0.5.RELEASE',
    spring_web: 'org.springframework:spring-web:3.0.5.RELEASE',
    spring_webmvc: 'org.springframework:spring-webmvc:3.0.5.RELEASE',
    velocity: 'org.apache.velocity:velocity:1.7',
]

// These libraries were included in the original project, but it is unclear if they
// are required.  We know for sure that SOME of them are loaded during runtime, but
// need to spend some time investigating one by one.
List runtime_libs = [
    'org.antlr:antlr:3.3',
    'org.antlr:antlr-runtime:3.3',
    'aopalliance:aopalliance:1.0',
    'asm:asm:3.3',
    'org.codehaus.btm:btm:2.1.2',
    'commons-collections:commons-collections:3.2.1',
    'commons-logging:commons-logging:1.1.1',
    'dom4j:dom4j:1.6.1',
    'org.drools:drools-compiler:5.4.0.Final',
    'org.drools:drools-persistence-jpa:5.4.0.Final',
    'org.drools:drools-spring:5.4.0.Final',
    'org.codehaus.jackson:jackson-mapper-asl:1.9.13',
    'org.codehaus.janino:janino:2.5.15',
    'javassist:javassist:3.12.1.GA',
    'com.sun.xml.bind:jaxb-impl:2.2.2',
    'com.sun.xml.bind:jaxb-xjc:2.2.2',
    'org.jbpm:jbpm-bam:5.3.0.Final',
    'org.jbpm:jbpm-bpmn2:5.3.0.Final',
    'org.jbpm:jbpm-flow-builder:5.3.0.Final',
    'org.jbpm:jbpm-human-task-hornetq:5.3.0.Final',
    'org.jbpm:jbpm-human-task-jms:5.3.0.Final',
    'org.jbpm:jbpm-human-task-mina:5.3.0.Final',
    'org.jbpm:jbpm-workitems:5.3.0.Final',
    //'jsr94:jsr94:1.1',
    'net.sourceforge.jexcelapi:jxl:2.6.10',
    'org.drools:knowledge-api:5.4.0.Final',
    'org.drools:knowledge-internal-api:5.4.0.Final',
    'org.apache.mina:mina-core:2.0.1',
    'org.mvel:mvel2:2.1.0.drools16',
    'com.google.protobuf:protobuf-java:2.4.1',
    'org.slf4j:slf4j-api:1.6.4',
    'org.slf4j:slf4j-log4j12:1.6.4',
    'org.springframework:spring-aop:3.0.5.RELEASE',
    'org.springframework:spring-asm:3.0.5.RELEASE',
    'org.springframework:spring-context-support:3.0.5.RELEASE',
    'org.springframework:spring-core:3.0.5.RELEASE',
    'org.springframework:spring-expression:3.0.5.RELEASE',
    'org.springframework.security:spring-security-acl:3.0.5.RELEASE',
    'org.springframework.security:spring-security-aspects:3.0.5.RELEASE',
    'org.springframework.security:spring-security-taglibs:3.0.5.RELEASE',
    'xpp3:xpp3:1.1.4c',
    'com.thoughtworks.xstream:xstream:1.4'
]

allprojects {
    repositories {
        mavenCentral()
        maven {
            url 'https://artifacts.alfresco.com/nexus/content/repositories/public/'
        }
    }
}

project(':services') {
    apply plugin: 'java'

    dependencies {
        compile libs.commons_codec
        compile libs.commons_lang
        compile libs.itext
        compile libs.jasypt
        compile libs.jbpm_human_task_core
        compile libs.velocity
        compile fileTree(dir: '../cms-portal-services/lib', include: '*.jar', exclude: 'cms-core.jar')
        compile project(path: ':cms-business-model', configuration: 'archives')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/javax')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/org/hibernate')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/org/codehaus/jackson')
    }
    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }
}

project(':cms-business-process') {
    apply plugin: 'java'
    dependencies {
        compile project(path: ':services', configuration: 'archives')
        compile project(path: ':cms-business-model', configuration: 'archives')
        compile libs.commons_codec
        compile libs.commons_io
        compile libs.commons_lang
        compile libs.drools_core
        compile libs.itext
        compile libs.jbpm_flow
        compile libs.jbpm_human_task_core
        compile libs.velocity
        compile fileTree(dir: '../cms-portal-services/lib', include: '*.jar', exclude: 'cms-core.jar')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/javax')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/org/hibernate')
        compile fileTree(dir: '../../../wildfly-10.1.0.Final/modules/system/layers/base/org/codehaus/jackson')
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }
}

project(':cms-web') {
    apply plugin: 'war'
    dependencies {
        providedCompile project(':services')
        providedCompile fileTree(dir: 'WebContent/WEB-INF/lib')
        providedCompile libs.log4j
        providedCompile libs.spring_beans
        providedCompile libs.spring_context
        providedCompile libs.spring_ldap
        providedCompile libs.spring_security_core
        providedCompile libs.spring_security_ldap
        providedCompile libs.spring_security_web
        providedCompile libs.spring_tx
        providedCompile libs.spring_web
        providedCompile libs.spring_webmvc
        providedCompile 'org.springframework.security:spring-security-acl:3.0.5.RELEASE'
        providedCompile 'org.springframework.security:spring-security-aspects:3.0.5.RELEASE'
        providedCompile 'org.springframework.security:spring-security-config:3.0.5.RELEASE'
    }
    webAppDirName = 'WebContent'
}

project(':cms-business-model') {
    apply plugin: 'com.github.jacobono.jaxb'
    apply plugin: 'java'
    compileJava.dependsOn xjc
    System.setProperty('javax.xml.accessExternalSchema', 'file')

    dependencies {
         jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7'
         jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7'
         jaxb 'javax.xml.bind:jaxb-api:2.2.7'
    }

    sourceSets {
        main {
            java {
                srcDirs = [
                    'src/main/java',
                    'src/main/generated'
                ]
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }
    jaxb {
        xsdDir = 'cms-business-model/src/main/resources'
        bindingsDir = 'cms-business-model/src/main/resources'
        bindings = ['jaxb-bindings.xjb']
        xjc {
            producesDir = 'src/main/generated'
            destinationDir = 'src/main/generated'
            generatePackage = 'gov.medicaid.domain.model'
        }
    }
}

project(':cms-portal-services') {
    apply plugin: 'ear'
    dependencies {
        deploy project(path: ':cms-web', configuration: 'archives')
        deploy project(':cms-business-process')
        earlib fileTree(dir: 'lib')
        earlib libs.commons_codec
        earlib libs.commons_fileupload
        earlib libs.commons_io
        earlib libs.commons_lang
        earlib libs.drools_core
        earlib libs.itext
        earlib libs.jasypt
        earlib libs.jbpm_flow
        earlib libs.jbpm_human_task_core
        earlib libs.jbpm_persistence_jpa
        earlib libs.log4j
        earlib libs.spring_beans
        earlib libs.spring_context
        earlib libs.spring_jdbc
        earlib libs.spring_ldap
        earlib libs.spring_security_core
        earlib libs.spring_security_config
        earlib libs.spring_security_ldap
        earlib libs.spring_security_web
        earlib libs.spring_tx
        earlib libs.spring_web
        earlib libs.spring_webmvc
        earlib libs.velocity
        earlib project(path: ':cms-business-model', configuration: 'archives')
        earlib project(path: ':services', configuration: 'archives')
        earlib runtime_libs
   }

    ear {
        appDirName 'EarContent'
    }
}


